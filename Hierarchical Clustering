{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a970ce2f-1600-416b-8de1-d0711d050a2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#cargar las librerias\n",
    "import pandas as pd #Manejo y analisis de estrutura de datos\n",
    "import numpy as np #calculo numerico y el analisis de datos\n",
    "import seaborn as sns #creaci√≥n de graficos\n",
    "import matplotlib.pyplot as plt #para crear graficos en dos dimensiones\n",
    "import plotly.graph_objs as go #para crear graficos en tres dimensiones\n",
    "import plotly.express as px #creacion de graficos en tres dimensiones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d58d7498-9639-4446-a501-6989a84bca68",
   "metadata": {},
   "outputs": [],
   "source": [
    "#librerias de para implementar modelo hierarchical Clustering\n",
    "from sklearn.cluster import AgglomerativeClustering #algoritmos de agrupamiento o clustering, para dividir datos en grupos  o clusters basados e su similitud\n",
    "from sklearn.preprocessing import StandardScaler #escalar o normalizar datos \n",
    "from scipy.cluster.hierarchy import linkage, dendrogram #herramientas para realizar agrupamientos jerarquico y visualizacion de dendrogramas \n",
    "#dendogram:genera un grafico de arbol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "97bcbc6a-8436-4631-9985-2db548af3e55",
   "metadata": {},
   "outputs": [],
   "source": [
    "#librerias de para implementar e modelo\n",
    "from sklearn.metrics import silhouette_score, calinski_harabasz_score, davies_bouldin_score\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0221d3f4-6057-4f53-8c71-4e178f60701a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#libreria para evitar la advertencia de que el modelo tiee una perdida de emoria en windows\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8added5f-a9d6-44e2-bc0e-5db4c7828027",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>17</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>18</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>Male</td>\n",
       "      <td>64</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Female</td>\n",
       "      <td>30</td>\n",
       "      <td>19</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>19</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>19</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>Female</td>\n",
       "      <td>58</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>Female</td>\n",
       "      <td>24</td>\n",
       "      <td>20</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>Male</td>\n",
       "      <td>37</td>\n",
       "      <td>20</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>Male</td>\n",
       "      <td>22</td>\n",
       "      <td>20</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>21</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>Male</td>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>Male</td>\n",
       "      <td>52</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>23</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustomerID  Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
       "0            1    Male   19                  15                      39\n",
       "1            2    Male   21                  15                      81\n",
       "2            3  Female   20                  16                       6\n",
       "3            4  Female   23                  16                      77\n",
       "4            5  Female   31                  17                      40\n",
       "5            6  Female   22                  17                      76\n",
       "6            7  Female   35                  18                       6\n",
       "7            8  Female   23                  18                      94\n",
       "8            9    Male   64                  19                       3\n",
       "9           10  Female   30                  19                      72\n",
       "10          11    Male   67                  19                      14\n",
       "11          12  Female   35                  19                      99\n",
       "12          13  Female   58                  20                      15\n",
       "13          14  Female   24                  20                      77\n",
       "14          15    Male   37                  20                      13\n",
       "15          16    Male   22                  20                      79\n",
       "16          17  Female   35                  21                      35\n",
       "17          18    Male   20                  21                      66\n",
       "18          19    Male   52                  23                      29\n",
       "19          20  Female   35                  23                      98"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#cargar el conjunto de datos en la variable data\n",
    "data = pd.read_csv(\"Mall_Customers.csv\")\n",
    "data.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "25132c93-4070-4ef5-9c0d-b98b1d6f307b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>100.500000</td>\n",
       "      <td>38.850000</td>\n",
       "      <td>60.560000</td>\n",
       "      <td>50.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>57.879185</td>\n",
       "      <td>13.969007</td>\n",
       "      <td>26.264721</td>\n",
       "      <td>25.823522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>50.750000</td>\n",
       "      <td>28.750000</td>\n",
       "      <td>41.500000</td>\n",
       "      <td>34.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>100.500000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>61.500000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>150.250000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>73.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>200.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>137.000000</td>\n",
       "      <td>99.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CustomerID         Age  Annual Income (k$)  Spending Score (1-100)\n",
       "count  200.000000  200.000000          200.000000              200.000000\n",
       "mean   100.500000   38.850000           60.560000               50.200000\n",
       "std     57.879185   13.969007           26.264721               25.823522\n",
       "min      1.000000   18.000000           15.000000                1.000000\n",
       "25%     50.750000   28.750000           41.500000               34.750000\n",
       "50%    100.500000   36.000000           61.500000               50.000000\n",
       "75%    150.250000   49.000000           78.000000               73.000000\n",
       "max    200.000000   70.000000          137.000000               99.000000"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "62b04f79-8601-4f6a-aa98-d7f193c59aa0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 200 entries, 0 to 199\n",
      "Data columns (total 5 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   CustomerID              200 non-null    int64 \n",
      " 1   Gender                  200 non-null    object\n",
      " 2   Age                     200 non-null    int64 \n",
      " 3   Annual Income (k$)      200 non-null    int64 \n",
      " 4   Spending Score (1-100)  200 non-null    int64 \n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 7.9+ KB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "#obtener informaci√≥n sobre el tipo de datos y el total de valores en cada columna\n",
    "print(data.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "1d2c0c7b-82d5-4d3e-9730-0157ae4b769d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Identifcaci√≥n de datos faltantes y atipicos')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#identificar datos atipicos\n",
    "plt.figure(figsize=(6, 3))\n",
    "sns.boxplot(x=data['Annual Income (k$)'])\n",
    "plt.title('Identifcaci√≥n de datos faltantes y atipicos', fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0045fa80-33da-436d-96e3-735b947bf473",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CustomerID                0\n",
      "Gender                    0\n",
      "Age                       0\n",
      "Annual Income (k$)        0\n",
      "Spending Score (1-100)    0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#identificar columnas con datos faltantes\n",
    "print(data.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "864a4c90-fa6d-4309-9cf5-8885c1ea2500",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Identifcaci√≥n de datos atipicos')"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#identificar datos atipicos\n",
    "plt.figure(figsize=(6, 3))\n",
    "sns.boxplot(x=data['Spending Score (1-100)'])\n",
    "plt.title('Identifcaci√≥n de datos atipicos', fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "84c8db00-864b-4906-be3c-90f2c7dc573d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El total de datos atipicos es () 0\n"
     ]
    }
   ],
   "source": [
    "#conteo de datos at√≠picos\n",
    "nivel_minimo=0\n",
    "nivel_maximo=100\n",
    "total_atipicos=((data['Spending Score (1-100)']<nivel_minimo)|(data['Spending Score (1-100)']>nivel_maximo)).sum()\n",
    "print('El total de datos atipicos es ()', format(total_atipicos))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f21523dc-0370-4161-b8c4-d2ce7d4ae602",
   "metadata": {},
   "outputs": [],
   "source": [
    "#fintra datos atipicos\n",
    "datos=data[(data['Spending Score (1-100)']<nivel_maximo)&(data['Spending Score (1-100)']>nivel_minimo)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "8966756e-81b6-450b-aa22-05a23812d6f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 200 entries, 0 to 199\n",
      "Data columns (total 5 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   CustomerID              200 non-null    int64 \n",
      " 1   Gender                  200 non-null    object\n",
      " 2   Age                     200 non-null    int64 \n",
      " 3   Annual Income (k$)      200 non-null    int64 \n",
      " 4   Spending Score (1-100)  200 non-null    int64 \n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 7.9+ KB\n"
     ]
    }
   ],
   "source": [
    "#revision del tipo de datos y datos faltantes\n",
    "datos.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "0ac78577-775b-4a7e-8bfb-00d31109d6f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Month Income (k$)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15</td>\n",
       "      <td>-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15</td>\n",
       "      <td>-4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>16</td>\n",
       "      <td>-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16</td>\n",
       "      <td>-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17</td>\n",
       "      <td>-6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Annual Income (k$)  Month Income (k$)\n",
       "0                  15                 -4\n",
       "1                  15                 -4\n",
       "2                  16                 -5\n",
       "3                  16                 -5\n",
       "4                  17                 -6"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calcular la renta en meses\n",
    "current_month = datetime.now().month\n",
    "#Calcular la renta y agregar columna 'Month Income (k$)'\n",
    "datos ['Month Income (k$)']=current_month - datos['Annual Income (k$)']\n",
    "#Mostrar las primeras filas para verificar\n",
    "datos[['Annual Income (k$)','Month Income (k$)']].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "de4450a6-aa5a-40bd-855f-a461f74bc25c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#filtrar columnas del modelo\n",
    "datos1=datos[[\"CustomerID\",\"Annual Income (k$)\",\"Spending Score (1-100)\",\"Age\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "d90393af-a1c9-46b6-9dc8-66889ddeea4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>17</td>\n",
       "      <td>76</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>94</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>19</td>\n",
       "      <td>72</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>14</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>99</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>77</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>20</td>\n",
       "      <td>13</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>79</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>66</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>23</td>\n",
       "      <td>98</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>24</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>24</td>\n",
       "      <td>73</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>25</td>\n",
       "      <td>73</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>14</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>28</td>\n",
       "      <td>82</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>61</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>87</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>31</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>32</td>\n",
       "      <td>30</td>\n",
       "      <td>73</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>4</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>34</td>\n",
       "      <td>33</td>\n",
       "      <td>92</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>35</td>\n",
       "      <td>33</td>\n",
       "      <td>14</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>36</td>\n",
       "      <td>33</td>\n",
       "      <td>81</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>37</td>\n",
       "      <td>34</td>\n",
       "      <td>17</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>38</td>\n",
       "      <td>34</td>\n",
       "      <td>73</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>39</td>\n",
       "      <td>37</td>\n",
       "      <td>26</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>40</td>\n",
       "      <td>37</td>\n",
       "      <td>75</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustomerID  Annual Income (k$)  Spending Score (1-100)  Age\n",
       "0            1                  15                      39   19\n",
       "1            2                  15                      81   21\n",
       "2            3                  16                       6   20\n",
       "3            4                  16                      77   23\n",
       "4            5                  17                      40   31\n",
       "5            6                  17                      76   22\n",
       "6            7                  18                       6   35\n",
       "7            8                  18                      94   23\n",
       "8            9                  19                       3   64\n",
       "9           10                  19                      72   30\n",
       "10          11                  19                      14   67\n",
       "11          12                  19                      99   35\n",
       "12          13                  20                      15   58\n",
       "13          14                  20                      77   24\n",
       "14          15                  20                      13   37\n",
       "15          16                  20                      79   22\n",
       "16          17                  21                      35   35\n",
       "17          18                  21                      66   20\n",
       "18          19                  23                      29   52\n",
       "19          20                  23                      98   35\n",
       "20          21                  24                      35   35\n",
       "21          22                  24                      73   25\n",
       "22          23                  25                       5   46\n",
       "23          24                  25                      73   31\n",
       "24          25                  28                      14   54\n",
       "25          26                  28                      82   29\n",
       "26          27                  28                      32   45\n",
       "27          28                  28                      61   35\n",
       "28          29                  29                      31   40\n",
       "29          30                  29                      87   23\n",
       "30          31                  30                       4   60\n",
       "31          32                  30                      73   21\n",
       "32          33                  33                       4   53\n",
       "33          34                  33                      92   18\n",
       "34          35                  33                      14   49\n",
       "35          36                  33                      81   21\n",
       "36          37                  34                      17   42\n",
       "37          38                  34                      73   30\n",
       "38          39                  37                      26   36\n",
       "39          40                  37                      75   20"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Revision de los datos de las variables objetivo\n",
    "datos1.head(40)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "c55f9d8b-37b1-42dd-b896-5ebe6a7524a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0oAAAIiCAYAAAD2CjhuAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABkZUlEQVR4nO3deXRU9f3/8VcgOyQBAiRE2Qn7FgWxGMENFEGtolZQUdFWBVSsiiJVwCoRVIqiYrGy2ArUVnGBrwsqIIgWEFFQioJsiohiSCAhJCH394e/TJmZTDJD5s7c5fk4Z07LnTszn+3e5O3c3FeMYRiGAAAAAAAedaLdAAAAAACwGgolAAAAAPBBoQQAAAAAPiiUAAAAAMAHhRIAAAAA+KBQAgAAAAAfFEoAAAAA4INCCQAAAAB8UCgBAAAAgA8KJQCwqD/+8Y866aSTtGfPnmg3BQAA16FQAhA28+bNU0xMjOeRmJiozMxMnX322crLy9P+/fv9XjNp0iTFxMSE9DnFxcWaNGmSVqxYEdLrqvqsVq1aaciQISG9TzjU1O/Fixdrzpw5euutt9S8efOItCkmJkaTJk0K2/u1atXKaz0c/zjrrLNqfP2JrI2anHXWWUF9dm0/w/c46Ny5sx5++GGVlpaa+tl79+7VpEmTtHHjRlM/p9LOnTsVExOjefPmReTzKrVq1UrXX399xNuxYMECzZgxw9TPAGAdsdFuAADnmTt3rjp27KiysjLt379fq1ev1tSpU/X444/rn//8p8477zzPvjfddJMuuOCCkN6/uLhYkydPlqSQfuk9kc8yS3Vt+fbbb3XzzTfrlVdeUffu3SPcsvA644wz9Pjjj/ttT01NjUJrIqdNmzZ66aWXJEk//fST/va3v+mBBx7Q7t27NXv2bNM+d+/evZo8ebJatWqlnj17mvY5VtOsWTN9/PHHatu2ramfs2DBAm3evFljx4419XMAWAOFEoCw69q1q3r16uX599ChQ3XnnXcqNzdXl112mb755htlZGRIkk4++WSdfPLJpranuLhYycnJEfmsYFXXljZt2lT57ZsdNWjQQKeffnq0mxFxSUlJXv0eNGiQOnfurPnz5+upp55SYmJiFFvnPAkJCa5cZwDMxaV3ACKiRYsWeuKJJ3To0CH99a9/9Wyv6vKqDz74QGeddZbS09OVlJSkFi1aaOjQoSouLtbOnTvVpEkTSdLkyZM9lzdVXoZT+X4bNmzQ5ZdfroYNG3r+K3N1l3ItXrxY3bt3V2Jiotq0aaOnnnrK6/nKywp37tzptX3FihWKiYnxuwzw7bff1rnnnqu0tDQlJyerU6dOysvLq7bfFRUVmjZtmjp27KiEhAQ1bdpUI0aM0Hfffee131lnnaWuXbtq3bp1OvPMM5WcnKw2bdro0UcfVUVFRZX9O15hYaF+//vfKz09XfXr19cFF1ygr7/+usp9v/nmGw0fPlxNmzZVQkKCOnXqpGeeeabGzwjV0qVL1bNnTyUkJKh169ZVfgslSc8884z69eunpk2bql69eurWrZumTZumsrIyr/0Mw9C0adPUsmVLJSYm6pRTTtFbb70VVFvOPfdcdezYUYZh+L1nu3btNHjw4JD7Fxsbq549e6q0tFQHDx70es9nn31WPXv2VFJSkho2bKjLL79c3377rdfrg5nzFStWqHfv3pKkG264wXNsVF5OuX79el111VVq1aqVkpKS1KpVKw0bNky7du0Kqg979+7VlVdeqZSUFKWlpel3v/ud9u3bV+W+69ev18UXX6xGjRopMTFROTk5evnll4P6nKNHj+qhhx5Sp06dlJiYqPT0dJ199tlas2ZNwNcEuvQumPVbeQwvXLhQEyZMUFZWllJTU3Xeeedp69atnv3OOussLV26VLt27fK6tLJSaWmpHn74Yc/x26RJE91www366aefvD6vuvMbAGvhGyUAEXPhhReqbt26+vDDDwPus3PnTg0ePFhnnnmm5syZowYNGuj777/X22+/rdLSUjVr1kxvv/22LrjgAt1444266aabJMlTPFW67LLLdNVVV+mWW25RUVFRte3auHGjxo4dq0mTJikzM1MvvfSS7rjjDpWWluruu+8OuZ8vvPCCfv/736t///567rnn1LRpU3399dfavHlzta+79dZbNXv2bI0ZM0ZDhgzRzp079cADD2jFihXasGGDGjdu7Nl33759uvrqq3XXXXdp4sSJWrx4scaPH6+srCyNGDEi4GcYhqHf/va3WrNmjR588EH17t1bH330kQYNGuS371dffaW+fft6itzMzEy98847uv322/Xzzz9r4sSJNY6FYRgqLy/32163bl3PL5nvv/++LrnkEv3mN7/RokWLdOzYMU2bNk0//vij3+u2b9+u4cOHq3Xr1oqPj9fnn3+uRx55RP/97381Z84cz36TJ0/W5MmTdeONN+ryyy/Xnj179Pvf/17Hjh1Thw4dqm3zHXfcoUsuuUTvv/++12Wib731lrZv3+5XRAdrx44datCggddavfnmmzVv3jzdfvvtmjp1qn755Rc99NBD6tu3rz7//HPPN69SzXN+yimnaO7cubrhhhv0pz/9yVPQVX5zuXPnTnXo0EFXXXWVGjVqpB9++EGzZs1S79699dVXX3mtL19HjhzReeedp7179yovL0/t27fX0qVL9bvf/c5v3+XLl+uCCy5Qnz599NxzzyktLU2LFi3S7373OxUXF3v9bZGv8vJyDRo0SKtWrdLYsWN1zjnnqLy8XJ988ol2796tvn37Bj3eoa7f+++/X2eccYb+9re/qbCwUPfee68uuugibdmyRXXr1tWzzz6rP/zhD9q+fbsWL17s9dqKigpdcsklWrVqlcaNG6e+fftq165dmjhxos466yytX79eSUlJNZ7fkpOTg+4fgAgwACBM5s6da0gy1q1bF3CfjIwMo1OnTp5/T5w40Tj+VPTvf//bkGRs3Lgx4Hv89NNPhiRj4sSJfs9Vvt+DDz4Y8LnjtWzZ0oiJifH7vAEDBhipqalGUVGRV9927Njhtd/y5csNScby5csNwzCMQ4cOGampqUZubq5RUVERsA++bdmyZYshyRg1apTXfv/5z38MScb999/v2da/f39DkvGf//zHa9/OnTsb559/fsDPNAzDeOuttwxJxpNPPum1/ZFHHvEb0/PPP984+eSTjYKCAq99x4wZYyQmJhq//PJLtZ/VsmVLQ1KVjz//+c+e/fr06WNkZWUZR44c8WwrLCw0GjVq5Ddfxzt27JhRVlZmvPjii0bdunU97cnPzzcSExONSy+91Gv/jz76yJBk9O/fv9p2Hzt2zGjTpo1xySWXeG0fNGiQ0bZt22rn1TB+nZ8uXboYZWVlRllZmfHDDz8YDz74oCHJeO655zz7ffzxx4Yk44knnvB6/Z49e4ykpCRj3LhxXu8ZzJyvW7fOkGTMnTu32jYahmGUl5cbhw8fNurVq+e3HnzNmjXLkGS8/vrrXtt///vf+31ex44djZycHKOsrMxr3yFDhhjNmjUzjh07FvBzXnzxRUOS8fzzz1fbnpYtWxrXXXed5987duzwa0ew67fyGL7wwgu99nv55ZcNScbHH3/s2TZ48GCjZcuWfu1ZuHChIcl45ZVXvLZXzsezzz5rGEZw5zcA1sGldwAiyvC5nMlXz549FR8frz/84Q+aP3++3yVIwRo6dGjQ+3bp0kU9evTw2jZ8+HAVFhZqw4YNIX3umjVrVFhYqFGjRoV0x7bly5dLkt9/bT/ttNPUqVMnvf/++17bMzMzddppp3lt6969e42XUVV+ztVXX+21ffjw4V7/Likp0fvvv69LL71UycnJKi8v9zwuvPBClZSU6JNPPqmxX7m5uVq3bp3f48Ybb5QkFRUVad26dbrsssu8/m4nJSVFF110kd/7ffbZZ7r44ouVnp6uunXrKi4uTiNGjNCxY8c8lw9+/PHHKikp8etj37591bJlyxrbXKdOHY0ZM0ZLlizR7t27Jf36Tdbbb78d9Lx++eWXiouLU1xcnJo1a6aHHnpI48eP18033+zZZ8mSJYqJidE111zjNb6ZmZnq0aOH3+WcJzrnlQ4fPqx7771X7dq1U2xsrGJjY1W/fn0VFRVpy5Yt1b52+fLlSklJ0cUXX+y13XfdbNu2Tf/97389Y++7bn744Qevy9l8vfXWW0pMTNTIkSOD6lMgJ7J+fftWeSOVYMZ3yZIlatCggS666CKvz+rZs6cyMzM9cxmu8xuAyKBQAhAxRUVFOnDggLKysgLu07ZtW7333ntq2rSpRo8erbZt26pt27Z68sknQ/qsZs2aBb1vZmZmwG0HDhwI6XMr/x4h1JtGVH5OVe3Oysrya0d6errffgkJCTpy5EiNnxMbG+v3et8xOHDggMrLyzVz5kzPL/yVjwsvvFCS9PPPP9fYr7S0NPXq1cvvUdnP/Px8VVRUVDsHlXbv3q0zzzxT33//vZ588kmtWrVK69at8/zNSWXfK8cqmPcMZOTIkUpKStJzzz0n6de/jUpKSgr6F/i2bdtq3bp1Wrt2rf71r3+pR48eysvL06JFizz7/PjjjzIMQxkZGX5j/Mknn/iN74nOeaXhw4fr6aef1k033aR33nlHa9eu1bp169SkSZOg1s3xlwFW8h3Pyssl7777br8+jRo1SlL16+ann35SVlaW6tSp3a8nJ7J+fcc3ISFBkoIa3x9//FEHDx5UfHy83+ft27fP81nhOr8BiAz+RglAxCxdulTHjh2r8ZbeZ555ps4880wdO3ZM69ev18yZMzV27FhlZGToqquuCuqzQvk2p6o/SK/cVvnLU+W3HUePHvXaz/eXrcq/P/G9AUNNKj/nhx9+8Cuy9u7dW+3fj4T6OeXl5Tpw4IDXL4a+Y9CwYUPVrVtX1157rUaPHl3le7Vu3brW7WnYsKFiYmKqnYNKr732moqKivTqq696fTPkmxlU2a9A79mqVasa25WWlqbrrrtOf/vb33T33Xdr7ty5Gj58uBo0aFBzp/Treqm882Pv3r119tlnq0uXLho7dqyGDBmi+vXrq3HjxoqJidGqVas8v5Qfr6ptJ6qgoEBLlizRxIkTdd9993m2Hz16VL/88kuNr09PT9fatWv9tvuOceU6HT9+vC677LIq36u6vxFr0qSJVq9erYqKiloVS5Fav5UaN26s9PR0vf3221U+n5KS4vn/4Ti/AYgMvlECEBG7d+/W3XffrbS0NK/Lj6pTt25d9enTx/ONQeVlcKH8l95gfPnll/r888+9ti1YsEApKSk65ZRTJMnzy/UXX3zhtd8bb7zh9e++ffsqLS1Nzz33XI2XGR7vnHPOkST94x//8Nq+bt06bdmyReeee27Q71Wds88+W5I8GT+VFixY4PXv5ORknX322frss8/UvXv3Kr8VquobjlDVq1dPp512ml599VWVlJR4th86dEhvvvmm176Vxe/xBYRhGHr++ee99jv99NOVmJjo18c1a9YEfZmaJM8f/V9++eU6ePCgxowZE/RrfaWnp+vRRx/Vjz/+qJkzZ0qShgwZIsMw9P3331c5vt26dQv5cwIdGzExMTIMw6/4+tvf/qZjx47V+L5nn322Dh065LfefddNhw4dlJ2drc8//7zKPvXq1curaPA1aNAglZSU1Do41qz1G+gbvCFDhujAgQM6duxYlZ9VVXEY6PwGwDr4RglA2G3evNlzjf7+/fu1atUqzZ07V3Xr1tXixYv97lB3vOeee04ffPCBBg8erBYtWqikpMRzN7PKO5ClpKSoZcuWev3113XuueeqUaNGaty4cVDfFFQlKytLF198sSZNmqRmzZrpH//4h5YtW6apU6d67kLVu3dvdejQQXfffbfKy8vVsGFDLV68WKtXr/Z6r/r16+uJJ57QTTfdpPPOO0+///3vlZGRoW3btunzzz/X008/XWUbOnTooD/84Q+aOXOm6tSpo0GDBnnuete8eXPdeeedJ9Q3XwMHDlS/fv00btw4FRUVqVevXvroo4/097//3W/fJ598Urm5uTrzzDN16623qlWrVjp06JC2bdumN998Ux988EGNn3fw4MEq/5YpISFBOTk5kqQ///nPuuCCCzRgwADdddddOnbsmKZOnap69ep5fdsxYMAAxcfHa9iwYRo3bpxKSko0a9Ys5efne713w4YNdffdd+vhhx/WTTfdpCuuuEJ79uzx3NUwWO3bt9cFF1ygt956S7m5uX5/xxaqESNGaPr06Xr88cc1evRonXHGGfrDH/6gG264QevXr1e/fv1Ur149/fDDD1q9erW6deumW2+9NaTPaNu2rZKSkvTSSy+pU6dOql+/vrKyspSVlaV+/frpscce8xwrK1eu1AsvvBDUt2QjRozQX/7yF40YMUKPPPKIsrOz9X//93965513/Pb961//qkGDBun888/X9ddfr5NOOkm//PKLtmzZog0bNuhf//pXwM8ZNmyY5s6dq1tuuUVbt27V2WefrYqKCv3nP/9Rp06dQvrGJRzr11e3bt306quvatasWTr11FNVp04d9erVS1dddZVeeuklXXjhhbrjjjt02mmnKS4uTt99952WL1+uSy65RJdeemlQ5zcAFhLNO0kAcJbKO8NVPuLj442mTZsa/fv3N6ZMmWLs37/f7zW+d3/7+OOPjUsvvdRo2bKlkZCQYKSnpxv9+/c33njjDa/Xvffee0ZOTo6RkJBgSPLcAavy/X766acaP8swfr171uDBg41///vfRpcuXYz4+HijVatWxvTp0/1e//XXXxsDBw40UlNTjSZNmhi33XabsXTpUq+73lX6v//7P6N///5GvXr1jOTkZKNz587G1KlTq23LsWPHjKlTpxrt27c34uLijMaNGxvXXHONsWfPHq/9Ku+q5uu6666r8o5cvg4ePGiMHDnSaNCggZGcnGwMGDDA+O9//1vlnQR37NhhjBw50jjppJOMuLg4o0mTJkbfvn2Nhx9+uMbPqe6udyeddJLXvm+88YbRvXt3Iz4+3mjRooXx6KOPVjlGb775ptGjRw8jMTHROOmkk4x77rnHcye/4+egoqLCyMvLM5o3b27Ex8cb3bt3N958802jf//+Nd717njz5s0zJBmLFi0K+jWB5scwDM96mTx5smfbnDlzjD59+hj16tUzkpKSjLZt2xojRoww1q9fX+N7VjXn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1Vdf6YknnlCDBg08+zCf9jF16lQ999xzevrpp7VlyxZNmzZNjz32mGbOnOnZh/m0pqKiIvXo0UNPP/10lc8HM29jx47V4sWLtWjRIq1evVqHDx/WkCFDdOzYsUh1A/9fdfNZXFysDRs26IEHHtCGDRv06quv6uuvv9bFF1/stR/zaQ01HZuVXnvtNf3nP/9RVlaW33OmzqUBx9m/f78hyVi5cqVhGIZRUVFhZGZmGo8++qhnn5KSEiMtLc147rnnotVMVOPQoUNGdna2sWzZMqN///7GHXfcYRgGc2k39957r5GbmxvweebTXgYPHmyMHDnSa9tll11mXHPNNYZhMJ92IclYvHix59/BzNvBgweNuLg4Y9GiRZ59vv/+e6NOnTrG22+/HbG2w5/vfFZl7dq1hiRj165dhmEwn1YVaC6/++4746STTjI2b95stGzZ0vjLX/7iec7sueQbJQcqKCiQJDVq1EiStGPHDu3bt08DBw707JOQkKD+/ftrzZo1UWkjqjd69GgNHjxY5513ntd25tJe3njjDfXq1UtXXHGFmjZtqpycHD3//POe55lPe8nNzdX777+vr7/+WpL0+eefa/Xq1brwwgslMZ92Fcy8ffrppyorK/PaJysrS127dmVubaCgoEAxMTGeb/OZT/uoqKjQtddeq3vuuUddunTxe97suYyt9TvAUgzD0B//+Efl5uaqa9eukqR9+/ZJkjIyMrz2zcjI0K5duyLeRlRv0aJF2rBhg9atW+f3HHNpL99++61mzZqlP/7xj7r//vu1du1a3X777UpISNCIESOYT5u59957VVBQoI4dO6pu3bo6duyYHnnkEQ0bNkwSx6ddBTNv+/btU3x8vBo2bOi3T+XrYU0lJSW67777NHz4cKWmpkpiPu1k6tSpio2N1e23317l82bPJYWSw4wZM0ZffPGFVq9e7fdcTEyM178Nw/Dbhujas2eP7rjjDr377rtKTEwMuB9zaQ8VFRXq1auXpkyZIknKycnRl19+qVmzZmnEiBGe/ZhPe/jnP/+pf/zjH1qwYIG6dOmijRs3auzYscrKytJ1113n2Y/5tKcTmTfm1trKysp01VVXqaKiQs8++2yN+zOf1vLpp5/qySef1IYNG0Kel3DNJZfeOchtt92mN954Q8uXL9fJJ5/s2Z6ZmSlJfpX1/v37/f4LGqLr008/1f79+3XqqacqNjZWsbGxWrlypZ566inFxsZ65ou5tIdmzZqpc+fOXts6deqk3bt3S+LYtJt77rlH9913n6666ip169ZN1157re68807l5eVJYj7tKph5y8zMVGlpqfLz8wPuA2spKyvTlVdeqR07dmjZsmWeb5Mk5tMuVq1apf3796tFixae34l27dqlu+66S61atZJk/lxSKDmAYRgaM2aMXn31VX3wwQdq3bq11/OtW7dWZmamli1b5tlWWlqqlStXqm/fvpFuLqpx7rnnatOmTdq4caPn0atXL1199dXauHGj2rRpw1zayBlnnOF3q/6vv/5aLVu2lMSxaTfFxcWqU8f7x2bdunU9twdnPu0pmHk79dRTFRcX57XPDz/8oM2bNzO3FlRZJH3zzTd67733lJ6e7vU882kP1157rb744guv34mysrJ0zz336J133pFk/lxy6Z0DjB49WgsWLNDrr7+ulJQUz38VS0tLU1JSkieHZ8qUKcrOzlZ2dramTJmi5ORkDR8+PMqtx/FSUlI8f1tWqV69ekpPT/dsZy7t484771Tfvn01ZcoUXXnllVq7dq1mz56t2bNnSxLHps1cdNFFeuSRR9SiRQt16dJFn332maZPn66RI0dKYj6t7PDhw9q2bZvn3zt27NDGjRvVqFEjtWjRosZ5S0tL04033qi77rpL6enpatSoke6++25169bN76Y7MF9185mVlaXLL79cGzZs0JIlS3Ts2DHP70WNGjVSfHw882khNR2bvkVuXFycMjMz1aFDB0kRODZrfd88RJ2kKh9z58717FNRUWFMnDjRyMzMNBISEox+/foZmzZtil6jEbTjbw9uGMyl3bz55ptG165djYSEBKNjx47G7NmzvZ5nPu2jsLDQuOOOO4wWLVoYiYmJRps2bYwJEyYYR48e9ezDfFrT8uXLq/w5ed111xmGEdy8HTlyxBgzZozRqFEjIykpyRgyZIixe/fuKPQG1c3njh07Av5etHz5cs97MJ/WUNOx6cv39uCGYe5cxhiGYdS+3AIAAAAA5+BvlAAAAADAB4USAAAAAPigUAIAAAAAHxRKAAAAAOCDQgkAAAAAfFAoAQAAAIAPCiUAAAAA8EGhBAAAAAA+KJQAAJYyb948NWjQINrNiKqtW7cqMzNThw4dkhTamEyaNEk7d+70275kyRLl5OSooqIijC0FAOeiUAIAl1izZo3q1q2rCy64INpNqbWYmBi99tpr0W6GaSZMmKDRo0crJSUlbO85ZMgQxcTEaMGCBWF7TwBwMgolAHCJOXPm6LbbbtPq1au1e/fuaDcHAXz33Xd64403dMMNN4T0un/961869dRT9dhjj6l37946/fTT9corr3jtc8MNN2jmzJnhbC4AOBaFEgC4QFFRkV5++WXdeuutGjJkiObNm+f1/IoVKxQTE6P3339fvXr1UnJysvr27autW7d69pk0aZJ69uypv//972rVqpXS0tJ01VVXeS4Pk6RWrVppxowZXu/ds2dPTZo0yfPv6dOnq1u3bqpXr56aN2+uUaNG6fDhwyfct507dyomJkavvvqqzj77bCUnJ6tHjx76+OOPvfb76KOP1L9/fyUnJ6thw4Y6//zzlZ+fL0k6evSobr/9djVt2lSJiYnKzc3VunXr/MbnnXfeUU5OjpKSknTOOedo//79euutt9SpUyelpqZq2LBhKi4u9rzOMAxNmzZNbdq0UVJSknr06KF///vf1fbn5ZdfVo8ePXTyyScH3OfAgQM67bTTdPHFF6ukpERff/21hg0bpsGDB+v666/X3LlzNXr0aJWVlXm97uKLL9batWv17bffBj2+AOBWFEoA4AL//Oc/1aFDB3Xo0EHXXHON5s6dK8Mw/PabMGGCnnjiCa1fv16xsbEaOXKk1/Pbt2/Xa6+9piVLlmjJkiVauXKlHn300ZDaUqdOHT311FPavHmz5s+frw8++EDjxo2rVf8q23733Xdr48aNat++vYYNG6by8nJJ0saNG3XuueeqS5cu+vjjj7V69WpddNFFOnbsmCRp3LhxeuWVVzR//nxt2LBB7dq10/nnn69ffvnF6zMmTZqkp59+WmvWrNGePXt05ZVXasaMGVqwYIGWLl2qZcuWeX1j86c//Ulz587VrFmz9OWXX+rOO+/UNddco5UrVwbsx4cffqhevXoFfP67777TmWeeqY4dO+rVV19VYmKivvjiC9WpU0eTJ09WkyZN1LVrV1177bW66qqrvF7bsmVLNW3aVKtWrQp5fAHAdQwAgOP17dvXmDFjhmEYhlFWVmY0btzYWLZsmef55cuXG5KM9957z7Nt6dKlhiTjyJEjhmEYxsSJE43k5GSjsLDQs88999xj9OnTx/Pvli1bGn/5y1+8PrtHjx7GxIkTA7bt5ZdfNtLT0z3/njt3rpGWllZtfyQZixcvNgzDMHbs2GFIMv72t795nv/yyy8NScaWLVsMwzCMYcOGGWeccUaV73X48GEjLi7OeOmllzzbSktLjaysLGPatGmGYVQ9Pnl5eYYkY/v27Z5tN998s3H++ed73jcxMdFYs2aN1+fdeOONxrBhwwL2rUePHsZDDz3kta1yTLZu3Wq0aNHCuO2224yKigrP899++62RkJBg3HXXXcaNN95o7NixI+D75+TkGJMmTQr4PADgV3yjBAAOt3XrVq1du9bz7UJsbKx+97vfac6cOX77du/e3fP/mzVrJknav3+/Z1urVq28bjDQrFkzr+eDsXz5cg0YMEAnnXSSUlJSNGLECB04cEBFRUUhvU8oba/8Rqkq27dvV1lZmc444wzPtri4OJ122mnasmVLwM/IyMhQcnKy2rRp47Wt8jO/+uorlZSUaMCAAapfv77n8eKLL2r79u0B+3HkyBElJiZWuT03N1e//e1v9dRTTykmJsbzXOvWrbVs2TJt3rxZCxcu1CmnnKLhw4dX+TlJSUlelwcCAKoWG+0GAADM9cILL6i8vFwnnXSSZ5thGIqLi1N+fr4aNmzo2R4XF+f5/5W/iB9/O+njn6/c5/jn69Sp43dJ3/F/J7Nr1y5deOGFuuWWW/TnP/9ZjRo10urVq3XjjTf6/T1NqKpre1JSUsDXVbb3+MKjcrvvNt/PqG48Kv936dKlXmMvSQkJCQHb07hxY8/fTvm+5rzzztPSpUt1zz33+P0N05lnnqm3335bkyZNUpcuXfTCCy/onHPO0fbt2xUb+78f97/88ouaNGkS8PMBAL/iGyUAcLDy8nK9+OKLeuKJJ7Rx40bP4/PPP1fLli310ksvhfXzmjRpoh9++MHz78LCQu3YscPz7/Xr16u8vFxPPPGETj/9dLVv31579+4Naxuq0r17d73//vtVPteuXTvFx8dr9erVnm1lZWVav369OnXqdMKf2blzZyUkJGj37t1q166d16N58+YBX5eTk6OvvvrKb3udOnX097//XaeeeqrOOeecasetd+/eeuyxx7R7927t2rXLs72kpETbt29XTk7OCfcLANyCb5QAwMGWLFmi/Px83XjjjUpLS/N67vLLL9cLL7ygMWPGhO3zzjnnHM2bN08XXXSRGjZsqAceeEB169b1PN+2bVuVl5dr5syZuuiii/TRRx/pueeeC9vnBzJ+/Hh169ZNo0aN0i233KL4+HgtX75cV1xxhRo3bqxbb71V99xzjxo1aqQWLVpo2rRpKi4u1o033njCn5mSkqK7775bd955pyoqKpSbm6vCwkKtWbNG9evX13XXXVfl684//3zddNNNOnbsmNfYSVLdunX10ksvadiwYTrnnHO0YsUKZWZm6u2339aWLVt0ySWXqKKiQvv379fzzz+vxo0bq0WLFp7Xf/LJJ0pISNBvfvObE+4XALgF3ygBgIO98MILOu+88/yKJEkaOnSoNm7cqA0bNoTt88aPH69+/fppyJAhuvDCC/Xb3/5Wbdu29Tzfs2dPTZ8+XVOnTlXXrl310ksvKS8vL2yfH0j79u317rvv6vPPP9dpp52m3/zmN3r99dc9l6Q9+uijGjp0qK699lqdcsop2rZtm9555x2vyxJPxJ///Gc9+OCDysvLU6dOnXT++efrzTffVOvWrQO+5sILL1RcXJzee++9Kp+PjY3VwoUL1aVLF88tylu1aqX//Oc/6tevn6ZMmaJzzz1XW7Zs0ZIlS7wuD1y4cKGuvvpqJScn16pfAOAGMYbvxeQAACCqnn32Wb3++ut65513Qn7tpEmTdP3116tVq1Ze23/66Sd17NhR69evr7ZQAwD8ikvvAACwmD/84Q/Kz8/XoUOHvO4yWBs7duzQs88+S5EEAEHiGyUAAAAA8MHfKAEAAACADwolAAAAAPBBoQQAAAAAPiiUAAAAAMAHhRIAAAAA+KBQAgAAAAAfFEoAAAAA4INCCQAAAAB8UCgBAAAAgI//B0Xf+qvWS+bXAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#grafica antes del agrupamiento\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.scatterplot(x=datos1['Annual Income (k$)'], y=datos1['Age'])\n",
    "plt.title('Distribuci√≥n de Edad y Renta de clientes')\n",
    "plt.xlabel('Annual Income (k$)')\n",
    "plt.ylabel('Age')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "1483825b-9541-40b8-a8f3-13f62eb2696f",
   "metadata": {},
   "outputs": [],
   "source": [
    "Scaler = StandardScaler()\n",
    "Scaled_data = Scaler.fit_transform(datos[[\"CustomerID\",\"Annual Income (k$)\",\"Spending Score (1-100)\",\"Age\"]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "ea9364b3-2c18-414e-b6be-05e58f2dec1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#check for and handle non-finite values in Scaled_data\n",
    "Scaled_data = np.nan_to_num(Scaled_data)\n",
    "#Continue with hierarchical clustering\n",
    "linked = linkage(Scaled_data, method='ward')\n",
    "plt.figure(figsize=(10, 7))\n",
    "dendrogram(linked, orientation='top', distance_sort='descending', show_leaf_counts=False)\n",
    "plt.title('Dendrograma para Clustering Jerarquico')\n",
    "plt.xlabel('Muestras')\n",
    "plt.ylabel('Distancia')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "493ee388-f7fa-4518-b8b8-521e48bb55ee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coeficiente de silhouette: (sil_score)\n",
      "Indice de calinki -Harabasz: (ch_score)\n",
      "indice de Davies-bouldin: (db_score)\n"
     ]
    }
   ],
   "source": [
    "#Suponiendo que 'datos' es tu dataFrame\n",
    "#Reemplazar los NaNs con la media de cada columna\n",
    "datos[[\"CustomerID\",\"Annual Income (k$)\",\"Spending Score (1-100)\",\"Age\"]]\n",
    "\n",
    "#preprocesamiento de los datos\n",
    "Scaler = StandardScaler()\n",
    "scaled_data = Scaler.fit_transform(datos[[\"CustomerID\",\"Annual Income (k$)\",\"Spending Score (1-100)\",\"Age\"]])\n",
    "\n",
    "#Entendimiento del modelo de Clustering Jerarquico\n",
    "model = AgglomerativeClustering(n_clusters=3, linkage='ward')\n",
    "labels = model.fit_predict(scaled_data)\n",
    "\n",
    "#Evaluacion del modelo\n",
    "\n",
    "#coeficiente de silhoutte\n",
    "sill_score = silhouette_score(scaled_data, labels)\n",
    "print(f\"Coeficiente de silhouette: (sil_score)\")\n",
    "\n",
    "#Indice de Calinski-Harabasz\n",
    "ch_score = calinski_harabasz_score(scaled_data, labels)\n",
    "print(f\"Indice de calinki -Harabasz: (ch_score)\")\n",
    "\n",
    "#Indice de Davies-Bouldin\n",
    "db_score = davies_bouldin_score(scaled_data, labels)\n",
    "print(f\"indice de Davies-bouldin: (db_score)\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
